/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ChainLinkFeedsMap } from "../ChainLinkFeedsMap";

export class ChainLinkFeedsMap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ChainLinkFeedsMap> {
    return super.deploy(overrides || {}) as Promise<ChainLinkFeedsMap>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainLinkFeedsMap {
    return super.attach(address) as ChainLinkFeedsMap;
  }
  connect(signer: Signer): ChainLinkFeedsMap__factory {
    return super.connect(signer) as ChainLinkFeedsMap__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainLinkFeedsMap {
    return new Contract(address, _abi, signerOrProvider) as ChainLinkFeedsMap;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122016d4541180d163f2f4bb517fd029b740b84d8c032320a14dd86865097af8eeb264736f6c63430008000033";
